make -C ./src/backend generated-headers
make[1]: Entering directory '/home/david/postgresql/src/backend'
make -C catalog distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/catalog'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/catalog'
make -C nodes distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/nodes'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/nodes'
make -C utils distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/utils'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/utils'
make[1]: Leaving directory '/home/david/postgresql/src/backend'
rm -rf '/home/david/postgresql'/tmp_install
/usr/bin/mkdir -p '/home/david/postgresql'/tmp_install/log
make -C '.' DESTDIR='/home/david/postgresql'/tmp_install install >'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -j1 -C src/test/regress checkprep >>'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -C src/test/regress check
make[1]: Entering directory '/home/david/postgresql/src/test/regress'
make -C ../../../src/port all
make[2]: Entering directory '/home/david/postgresql/src/port'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/port'
make -C ../../../src/common all
make[2]: Entering directory '/home/david/postgresql/src/common'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/common'
make -C ../../../contrib/spi
make[2]: Entering directory '/home/david/postgresql/contrib/spi'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/contrib/spi'
echo "# +++ regress check in src/test/regress +++" && PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/bin:/home/david/postgresql/src/test/regress:$PATH" LD_LIBRARY_PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/lib"  ../../../src/test/regress/pg_regress --temp-instance=./tmp_check --inputdir=. --bindir=     --dlpath=. --max-concurrent-tests=20  --schedule=./parallel_schedule  
# +++ regress check in src/test/regress +++
# using temp instance on port 61696 with PID 8873
ok 1         - test_setup                                133 ms
# parallel group (20 tests):  int2 text int4 txid money name pg_lsn char float8 oid varchar regproc int8 float4 boolean enum uuid bit numeric rangetypes
ok 2         + boolean                                    70 ms
ok 3         + char                                       61 ms
ok 4         + name                                       56 ms
ok 5         + varchar                                    65 ms
ok 6         + text                                       46 ms
ok 7         + int2                                       40 ms
ok 8         + int4                                       48 ms
ok 9         + int8                                       65 ms
ok 10        + oid                                        64 ms
ok 11        + float4                                     66 ms
ok 12        + float8                                     61 ms
ok 13        + bit                                        77 ms
ok 14        + numeric                                   192 ms
ok 15        + txid                                       53 ms
ok 16        + uuid                                       74 ms
ok 17        + enum                                       72 ms
ok 18        + money                                      55 ms
ok 19        + rangetypes                                215 ms
ok 20        + pg_lsn                                     56 ms
ok 21        + regproc                                    63 ms
# parallel group (20 tests):  md5 lseg time path macaddr line circle point macaddr8 numerology inet timetz date interval box multirangetypes polygon strings timestamp timestamptz
ok 22        + strings                                   181 ms
ok 23        + md5                                        39 ms
ok 24        + numerology                                 83 ms
ok 25        + point                                      67 ms
ok 26        + lseg                                       40 ms
ok 27        + line                                       54 ms
ok 28        + box                                       162 ms
ok 29        + path                                       49 ms
ok 30        + polygon                                   169 ms
ok 31        + circle                                     60 ms
ok 32        + date                                       92 ms
ok 33        + time                                       40 ms
ok 34        + timetz                                     87 ms
ok 35        + timestamp                                 403 ms
ok 36        + timestamptz                               569 ms
ok 37        + interval                                   99 ms
ok 38        + inet                                       86 ms
ok 39        + macaddr                                    48 ms
ok 40        + macaddr8                                   78 ms
ok 41        + multirangetypes                           163 ms
# parallel group (12 tests):  misc_sanity xid unicode comments tstypes expressions horology type_sanity mvcc geometry opr_sanity regex
ok 42        + geometry                                  111 ms
ok 43        + horology                                   79 ms
ok 44        + tstypes                                    75 ms
ok 45        + regex                                     236 ms
ok 46        + type_sanity                                89 ms
ok 47        + opr_sanity                                212 ms
ok 48        + misc_sanity                                49 ms
ok 49        + comments                                   62 ms
ok 50        + expressions                                74 ms
ok 51        + unicode                                    58 ms
ok 52        + xid                                        54 ms
ok 53        + mvcc                                       88 ms
# parallel group (5 tests):  copyselect copydml copy insert_conflict insert
ok 54        + copy                                      208 ms
ok 55        + copyselect                                134 ms
ok 56        + copydml                                   140 ms
ok 57        + insert                                    302 ms
ok 58        + insert_conflict                           242 ms
# parallel group (7 tests):  create_function_c create_operator create_schema create_type create_misc create_procedure create_table
ok 59        + create_function_c                          18 ms
ok 60        + create_misc                                31 ms
ok 61        + create_operator                            24 ms
ok 62        + create_procedure                           35 ms
ok 63        + create_table                              158 ms
ok 64        + create_type                                29 ms
ok 65        + create_schema                              24 ms
# parallel group (5 tests):  index_including create_view index_including_gist create_index_spgist create_index
ok 66        + create_index                              446 ms
ok 67        + create_index_spgist                       207 ms
ok 68        + create_view                               136 ms
ok 69        + index_including                           106 ms
ok 70        + index_including_gist                      167 ms
# parallel group (16 tests):  roleattributes create_cast errors hash_func drop_if_exists create_aggregate select create_function_sql typed_table create_am constraints infinite_recurse vacuum updatable_views inherit triggers
ok 71        + create_aggregate                           55 ms
ok 72        + create_function_sql                        84 ms
ok 73        + create_cast                                35 ms
ok 74        + constraints                               126 ms
ok 75        + triggers                                  394 ms
ok 76        + select                                     63 ms
ok 77        + inherit                                   298 ms
ok 78        + typed_table                                86 ms
ok 79        + vacuum                                    217 ms
ok 80        + drop_if_exists                             53 ms
ok 81        + updatable_views                           278 ms
ok 82        + roleattributes                             28 ms
ok 83        + create_am                                 102 ms
ok 84        + hash_func                                  51 ms
ok 85        + errors                                     46 ms
ok 86        + infinite_recurse                          181 ms
ok 87        - sanity_check                               46 ms
# parallel group (20 tests):  select_distinct_on namespace delete select_into random portals select_having select_implicit case prepared_xacts arrays transactions select_distinct union subselect update hash_index join aggregates btree_index
ok 88        + select_into                                55 ms
ok 89        + select_distinct                           215 ms
ok 90        + select_distinct_on                         32 ms
ok 91        + select_implicit                           125 ms
ok 92        + select_having                             123 ms
ok 93        + subselect                                 257 ms
ok 94        + union                                     225 ms
ok 95        + case                                      139 ms
ok 96        + join                                      373 ms
ok 97        + aggregates                                438 ms
ok 98        + transactions                              204 ms
ok 99        + random                                    104 ms
ok 100       + portals                                   107 ms
ok 101       + arrays                                    189 ms
ok 102       + btree_index                               797 ms
ok 103       + hash_index                                358 ms
ok 104       + update                                    265 ms
ok 105       + delete                                     38 ms
ok 106       + namespace                                  37 ms
ok 107       + prepared_xacts                            155 ms
# parallel group (20 tests):  init_privs security_label drop_operator lock tablesample object_address replica_identity collate password identity groupingsets matview generated rowsecurity spgist gin gist join_hash brin privileges
ok 108       + brin                                     1062 ms
ok 109       + gin                                       637 ms
ok 110       + gist                                      673 ms
ok 111       + spgist                                    506 ms
ok 112       + privileges                               1313 ms
ok 113       + init_privs                                 47 ms
ok 114       + security_label                             69 ms
ok 115       + collate                                   214 ms
ok 116       + matview                                   341 ms
ok 117       + lock                                      124 ms
ok 118       + replica_identity                          183 ms
ok 119       + rowsecurity                               429 ms
ok 120       + object_address                            143 ms
ok 121       + tablesample                               136 ms
ok 122       + groupingsets                              297 ms
ok 123       + drop_operator                              73 ms
ok 124       + password                                  221 ms
ok 125       + identity                                  262 ms
ok 126       + generated                                 367 ms
ok 127       + join_hash                                1059 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 128       + brin_bloom                                 46 ms
ok 129       + brin_multi                                 94 ms
# parallel group (16 tests):  dbsize async alter_operator tidscan tsrf tid create_role tidrangescan sysviews alter_generic misc_functions misc incremental_sort merge create_table_like collate.icu.utf8
ok 130       + create_table_like                         148 ms
ok 131       + alter_generic                              93 ms
ok 132       + alter_operator                             52 ms
ok 133       + misc                                       97 ms
ok 134       + async                                      30 ms
ok 135       + dbsize                                     23 ms
ok 136       + merge                                     136 ms
ok 137       + misc_functions                             95 ms
ok 138       + sysviews                                   77 ms
ok 139       + tsrf                                       61 ms
ok 140       + tid                                        66 ms
ok 141       + tidscan                                    57 ms
ok 142       + tidrangescan                               73 ms
ok 143       + collate.icu.utf8                          276 ms
ok 144       + incremental_sort                          119 ms
ok 145       + create_role                                70 ms
# parallel group (7 tests):  amutils collate.windows.win1252 collate.linux.utf8 psql_crosstab rules psql stats_ext
ok 146       + rules                                     153 ms
ok 147       + psql                                      240 ms
ok 148       + psql_crosstab                              26 ms
ok 149       + amutils                                    14 ms
ok 150       + stats_ext                                 900 ms
ok 151       + collate.linux.utf8                         17 ms
ok 152       + collate.windows.win1252                    17 ms
ok 153       - select_parallel                           868 ms
ok 154       - write_parallel                            117 ms
ok 155       - vacuum_parallel                            64 ms
# parallel group (2 tests):  subscription publication
ok 156       + publication                               147 ms
ok 157       + subscription                               33 ms
# parallel group (17 tests):  advisory_lock xmlmap combocid equivclass functional_deps select_views guc portals_p2 tsdicts dependency tsearch indirect_toast window cluster bitmapops foreign_data foreign_key
ok 158       + select_views                               80 ms
ok 159       + portals_p2                                119 ms
ok 160       + foreign_key                               526 ms
ok 161       + cluster                                   259 ms
ok 162       + dependency                                152 ms
ok 163       + guc                                        98 ms
ok 164       + bitmapops                                 299 ms
ok 165       + combocid                                   33 ms
ok 166       + tsearch                                   170 ms
ok 167       + tsdicts                                   139 ms
ok 168       + foreign_data                              357 ms
ok 169       + window                                    236 ms
ok 170       + xmlmap                                     33 ms
ok 171       + functional_deps                            47 ms
ok 172       + advisory_lock                              31 ms
ok 173       + indirect_toast                            224 ms
ok 174       + equivclass                                 44 ms
# parallel group (7 tests):  jsonpath_encoding json_encoding jsonpath sqljson jsonb_jsonpath json jsonb
ok 175       + json                                       54 ms
ok 176       + jsonb                                     113 ms
ok 177       + json_encoding                              20 ms
ok 178       + jsonpath                                   21 ms
ok 179       + jsonpath_encoding                          19 ms
ok 180       + jsonb_jsonpath                             43 ms
ok 181       + sqljson                                    36 ms
# parallel group (18 tests):  prepare returning limit xml polymorphism plancache conversion rowtypes sequence copy2 rangefuncs with temp truncate largeobject domain plpgsql alter_table
ok 182       + plancache                                 129 ms
ok 183       + limit                                      87 ms
ok 184       + plpgsql                                   334 ms
ok 185       + copy2                                     170 ms
ok 186       + temp                                      204 ms
ok 187       + domain                                    219 ms
ok 188       + rangefuncs                                189 ms
ok 189       + prepare                                    74 ms
ok 190       + conversion                                133 ms
ok 191       + truncate                                  208 ms
ok 192       + alter_table                               732 ms
ok 193       + sequence                                  169 ms
ok 194       + polymorphism                              123 ms
ok 195       + rowtypes                                  165 ms
ok 196       + returning                                  84 ms
ok 197       + largeobject                               213 ms
ok 198       + with                                      189 ms
ok 199       + xml                                       110 ms
# parallel group (12 tests):  hash_part reloptions partition_info explain memoize compression indexing partition_join partition_aggregate partition_prune tuplesort stats
ok 200       + partition_join                            500 ms
ok 201       + partition_prune                           690 ms
ok 202       + reloptions                                130 ms
ok 203       + hash_part                                  38 ms
ok 204       + indexing                                  484 ms
ok 205       + partition_aggregate                       643 ms
ok 206       + partition_info                            169 ms
ok 207       + tuplesort                                 697 ms
ok 208       + explain                                   177 ms
ok 209       + compression                               203 ms
ok 210       + memoize                                   188 ms
ok 211       + stats                                     722 ms
# parallel group (2 tests):  event_trigger oidjoins
ok 212       + event_trigger                              53 ms
ok 213       + oidjoins                                  105 ms
ok 214       - fast_default                               60 ms
ok 215       - tablespace                                206 ms
1..215
# All 215 tests passed.
make[1]: Leaving directory '/home/david/postgresql/src/test/regress'
