make -C ./src/backend generated-headers
make[1]: Entering directory '/home/david/postgresql/src/backend'
make -C catalog distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/catalog'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/catalog'
make -C nodes distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/nodes'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/nodes'
make -C utils distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/utils'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/utils'
make[1]: Leaving directory '/home/david/postgresql/src/backend'
rm -rf '/home/david/postgresql'/tmp_install
/usr/bin/mkdir -p '/home/david/postgresql'/tmp_install/log
make -C '.' DESTDIR='/home/david/postgresql'/tmp_install install >'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -j1 -C src/test/regress checkprep >>'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -C src/test/regress check
make[1]: Entering directory '/home/david/postgresql/src/test/regress'
make -C ../../../src/port all
make[2]: Entering directory '/home/david/postgresql/src/port'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/port'
make -C ../../../src/common all
make[2]: Entering directory '/home/david/postgresql/src/common'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/common'
make -C ../../../contrib/spi
make[2]: Entering directory '/home/david/postgresql/contrib/spi'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/contrib/spi'
echo "# +++ regress check in src/test/regress +++" && PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/bin:/home/david/postgresql/src/test/regress:$PATH" LD_LIBRARY_PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/lib"  ../../../src/test/regress/pg_regress --temp-instance=./tmp_check --inputdir=. --bindir=     --dlpath=. --max-concurrent-tests=20  --schedule=./parallel_schedule  
# +++ regress check in src/test/regress +++
# using temp instance on port 61696 with PID 2186
ok 1         - test_setup                                134 ms
# parallel group (20 tests):  char int4 money text int2 int8 boolean oid varchar txid pg_lsn regproc float4 name uuid float8 bit enum numeric rangetypes
ok 2         + boolean                                    51 ms
ok 3         + char                                       22 ms
ok 4         + name                                       62 ms
ok 5         + varchar                                    56 ms
ok 6         + text                                       46 ms
ok 7         + int2                                       49 ms
ok 8         + int4                                       37 ms
ok 9         + int8                                       48 ms
ok 10        + oid                                        53 ms
ok 11        + float4                                     61 ms
ok 12        + float8                                     81 ms
ok 13        + bit                                        85 ms
ok 14        + numeric                                   207 ms
ok 15        + txid                                       55 ms
ok 16        + uuid                                       72 ms
ok 17        + enum                                       89 ms
ok 18        + money                                      41 ms
ok 19        + rangetypes                                225 ms
ok 20        + pg_lsn                                     55 ms
ok 21        + regproc                                    56 ms
# parallel group (20 tests):  circle md5 point path time line lseg macaddr8 macaddr timetz numerology date inet interval strings polygon box multirangetypes timestamp timestamptz
ok 22        + strings                                   106 ms
ok 23        + md5                                        35 ms
ok 24        + numerology                                 58 ms
ok 25        + point                                      43 ms
ok 26        + lseg                                       49 ms
ok 27        + line                                       48 ms
ok 28        + box                                       147 ms
ok 29        + path                                       43 ms
ok 30        + polygon                                   143 ms
ok 31        + circle                                     30 ms
ok 32        + date                                       64 ms
ok 33        + time                                       46 ms
ok 34        + timetz                                     56 ms
ok 35        + timestamp                                 387 ms
ok 36        + timestamptz                               462 ms
ok 37        + interval                                   71 ms
ok 38        + inet                                       68 ms
ok 39        + macaddr                                    51 ms
ok 40        + macaddr8                                   49 ms
ok 41        + multirangetypes                           147 ms
# parallel group (12 tests):  comments misc_sanity xid tstypes expressions unicode horology type_sanity mvcc geometry opr_sanity regex
ok 42        + geometry                                   79 ms
ok 43        + horology                                   69 ms
ok 44        + tstypes                                    52 ms
ok 45        + regex                                     211 ms
ok 46        + type_sanity                                77 ms
ok 47        + opr_sanity                                190 ms
ok 48        + misc_sanity                                32 ms
ok 49        + comments                                   27 ms
ok 50        + expressions                                52 ms
ok 51        + unicode                                    53 ms
ok 52        + xid                                        50 ms
ok 53        + mvcc                                       77 ms
# parallel group (5 tests):  copydml copyselect copy insert_conflict insert
ok 54        + copy                                       31 ms
ok 55        + copyselect                                 22 ms
ok 56        + copydml                                    17 ms
ok 57        + insert                                    134 ms
ok 58        + insert_conflict                            65 ms
# parallel group (7 tests):  create_operator create_function_c create_type create_misc create_schema create_procedure create_table
ok 59        + create_function_c                          18 ms
ok 60        + create_misc                                31 ms
ok 61        + create_operator                            15 ms
ok 62        + create_procedure                           36 ms
ok 63        + create_table                              153 ms
ok 64        + create_type                                28 ms
ok 65        + create_schema                              31 ms
# parallel group (5 tests):  index_including create_view index_including_gist create_index_spgist create_index
ok 66        + create_index                              352 ms
ok 67        + create_index_spgist                       232 ms
ok 68        + create_view                               129 ms
ok 69        + index_including                            88 ms
ok 70        + index_including_gist                      129 ms
# parallel group (16 tests):  create_cast errors roleattributes hash_func create_aggregate drop_if_exists select typed_table create_am create_function_sql constraints infinite_recurse vacuum inherit updatable_views triggers
ok 71        + create_aggregate                           59 ms
ok 72        + create_function_sql                        87 ms
ok 73        + create_cast                                23 ms
ok 74        + constraints                               113 ms
ok 75        + triggers                                  404 ms
ok 76        + select                                     77 ms
ok 77        + inherit                                   277 ms
ok 78        + typed_table                                77 ms
ok 79        + vacuum                                    218 ms
ok 80        + drop_if_exists                             67 ms
ok 81        + updatable_views                           293 ms
ok 82        + roleattributes                             50 ms
ok 83        + create_am                                  85 ms
ok 84        + hash_func                                  56 ms
ok 85        + errors                                     38 ms
ok 86        + infinite_recurse                          184 ms
ok 87        - sanity_check                               44 ms
# parallel group (20 tests):  select_having namespace delete case prepared_xacts portals transactions subselect random select_distinct_on select_implicit select_into select_distinct join union arrays update hash_index aggregates btree_index
ok 88        + select_into                               204 ms
ok 89        + select_distinct                           280 ms
ok 90        + select_distinct_on                        184 ms
ok 91        + select_implicit                           193 ms
ok 92        + select_having                              27 ms
ok 93        + subselect                                 101 ms
ok 94        + union                                     285 ms
ok 95        + case                                       52 ms
ok 96        + join                                      284 ms
ok 97        + aggregates                                494 ms
ok 98        + transactions                               82 ms
ok 99        + random                                    170 ms
ok 100       + portals                                    71 ms
ok 101       + arrays                                    308 ms
ok 102       + btree_index                               750 ms
ok 103       + hash_index                                419 ms
ok 104       + update                                    316 ms
ok 105       + delete                                     39 ms
ok 106       + namespace                                  33 ms
ok 107       + prepared_xacts                             55 ms
# parallel group (20 tests):  init_privs security_label drop_operator tablesample object_address lock replica_identity collate password groupingsets identity matview generated rowsecurity spgist gin gist join_hash brin privileges
ok 108       + brin                                     1091 ms
ok 109       + gin                                       589 ms
ok 110       + gist                                      624 ms
ok 111       + spgist                                    516 ms
ok 112       + privileges                               1330 ms
ok 113       + init_privs                                106 ms
ok 114       + security_label                            115 ms
ok 115       + collate                                   245 ms
ok 116       + matview                                   377 ms
ok 117       + lock                                      192 ms
ok 118       + replica_identity                          242 ms
ok 119       + rowsecurity                               448 ms
ok 120       + object_address                            187 ms
ok 121       + tablesample                               158 ms
ok 122       + groupingsets                              321 ms
ok 123       + drop_operator                             121 ms
ok 124       + password                                  254 ms
ok 125       + identity                                  337 ms
ok 126       + generated                                 423 ms
ok 127       + join_hash                                1088 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 128       + brin_bloom                                142 ms
ok 129       + brin_multi                                193 ms
# parallel group (16 tests):  alter_operator async dbsize tidscan tsrf tidrangescan sysviews tid misc_functions create_role alter_generic misc incremental_sort merge collate.icu.utf8 create_table_like
ok 130       + create_table_like                         168 ms
ok 131       + alter_generic                              91 ms
ok 132       + alter_operator                             25 ms
ok 133       + misc                                      105 ms
ok 134       + async                                      26 ms
ok 135       + dbsize                                     38 ms
ok 136       + merge                                     117 ms
ok 137       + misc_functions                             76 ms
ok 138       + sysviews                                   71 ms
ok 139       + tsrf                                       45 ms
ok 140       + tid                                        74 ms
ok 141       + tidscan                                    44 ms
ok 142       + tidrangescan                               50 ms
ok 143       + collate.icu.utf8                          159 ms
ok 144       + incremental_sort                          105 ms
ok 145       + create_role                                81 ms
# parallel group (7 tests):  collate.linux.utf8 collate.windows.win1252 amutils psql_crosstab rules psql stats_ext
ok 146       + rules                                     137 ms
ok 147       + psql                                      176 ms
ok 148       + psql_crosstab                              26 ms
ok 149       + amutils                                    20 ms
ok 150       + stats_ext                                 786 ms
ok 151       + collate.linux.utf8                         17 ms
ok 152       + collate.windows.win1252                    17 ms
ok 153       - select_parallel                           840 ms
ok 154       - write_parallel                            105 ms
ok 155       - vacuum_parallel                            63 ms
# parallel group (2 tests):  subscription publication
ok 156       + publication                               140 ms
ok 157       + subscription                               32 ms
# parallel group (17 tests):  portals_p2 xmlmap advisory_lock combocid guc functional_deps tsdicts equivclass dependency select_views window cluster tsearch bitmapops indirect_toast foreign_data foreign_key
ok 158       + select_views                              127 ms
ok 159       + portals_p2                                 26 ms
ok 160       + foreign_key                               465 ms
ok 161       + cluster                                   226 ms
ok 162       + dependency                                 95 ms
ok 163       + guc                                        77 ms
ok 164       + bitmapops                                 259 ms
ok 165       + combocid                                   65 ms
ok 166       + tsearch                                   230 ms
ok 167       + tsdicts                                    83 ms
ok 168       + foreign_data                              309 ms
ok 169       + window                                    189 ms
ok 170       + xmlmap                                     47 ms
ok 171       + functional_deps                            79 ms
ok 172       + advisory_lock                              57 ms
ok 173       + indirect_toast                            279 ms
ok 174       + equivclass                                 84 ms
# parallel group (7 tests):  json_encoding jsonpath_encoding jsonpath sqljson jsonb_jsonpath json jsonb
ok 175       + json                                       53 ms
ok 176       + jsonb                                     108 ms
ok 177       + json_encoding                              12 ms
ok 178       + jsonpath                                   26 ms
ok 179       + jsonpath_encoding                          18 ms
ok 180       + jsonb_jsonpath                             41 ms
ok 181       + sqljson                                    34 ms
# parallel group (18 tests):  limit prepare returning plancache xml polymorphism conversion rowtypes copy2 temp rangefuncs sequence with largeobject domain truncate plpgsql alter_table
ok 182       + plancache                                  97 ms
ok 183       + limit                                      60 ms
ok 184       + plpgsql                                   320 ms
ok 185       + copy2                                     166 ms
ok 186       + temp                                      167 ms
ok 187       + domain                                    206 ms
ok 188       + rangefuncs                                169 ms
ok 189       + prepare                                    63 ms
ok 190       + conversion                                125 ms
ok 191       + truncate                                  211 ms
ok 192       + alter_table                               617 ms
ok 193       + sequence                                  178 ms
ok 194       + polymorphism                              122 ms
ok 195       + rowtypes                                  163 ms
ok 196       + returning                                  76 ms
ok 197       + largeobject                               196 ms
ok 198       + with                                      181 ms
ok 199       + xml                                       116 ms
# parallel group (12 tests):  hash_part reloptions explain partition_info memoize compression indexing partition_join partition_aggregate partition_prune stats tuplesort
ok 200       + partition_join                            405 ms
ok 201       + partition_prune                           576 ms
ok 202       + reloptions                                 63 ms
ok 203       + hash_part                                  31 ms
ok 204       + indexing                                  403 ms
ok 205       + partition_aggregate                       533 ms
ok 206       + partition_info                             80 ms
ok 207       + tuplesort                                 671 ms
ok 208       + explain                                    64 ms
ok 209       + compression                               130 ms
ok 210       + memoize                                   107 ms
ok 211       + stats                                     623 ms
# parallel group (2 tests):  event_trigger oidjoins
ok 212       + event_trigger                              50 ms
ok 213       + oidjoins                                  103 ms
ok 214       - fast_default                               58 ms
ok 215       - tablespace                                135 ms
1..215
# All 215 tests passed.
make[1]: Leaving directory '/home/david/postgresql/src/test/regress'
