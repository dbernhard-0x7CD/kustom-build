make -C ./src/backend generated-headers
make[1]: Entering directory '/home/david/postgresql/src/backend'
make -C catalog distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/catalog'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/catalog'
make -C nodes distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/nodes'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/nodes'
make -C utils distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/utils'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/utils'
make[1]: Leaving directory '/home/david/postgresql/src/backend'
rm -rf '/home/david/postgresql'/tmp_install
/usr/bin/mkdir -p '/home/david/postgresql'/tmp_install/log
make -C '.' DESTDIR='/home/david/postgresql'/tmp_install install >'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -j1 -C src/test/regress checkprep >>'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -C src/test/regress check
make[1]: Entering directory '/home/david/postgresql/src/test/regress'
make -C ../../../src/port all
make[2]: Entering directory '/home/david/postgresql/src/port'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/port'
make -C ../../../src/common all
make[2]: Entering directory '/home/david/postgresql/src/common'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/common'
make -C ../../../contrib/spi
make[2]: Entering directory '/home/david/postgresql/contrib/spi'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/contrib/spi'
echo "# +++ regress check in src/test/regress +++" && PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/bin:/home/david/postgresql/src/test/regress:$PATH" LD_LIBRARY_PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/lib"  ../../../src/test/regress/pg_regress --temp-instance=./tmp_check --inputdir=. --bindir=     --dlpath=. --max-concurrent-tests=20  --schedule=./parallel_schedule  
# +++ regress check in src/test/regress +++
# using temp instance on port 61696 with PID 2154
ok 1         - test_setup                                178 ms
# parallel group (20 tests):  float4 int2 pg_lsn name text regproc char varchar int8 txid oid money int4 boolean uuid bit float8 enum numeric rangetypes
ok 2         + boolean                                    67 ms
ok 3         + char                                       46 ms
ok 4         + name                                       42 ms
ok 5         + varchar                                    58 ms
ok 6         + text                                       44 ms
ok 7         + int2                                       39 ms
ok 8         + int4                                       65 ms
ok 9         + int8                                       59 ms
ok 10        + oid                                        61 ms
ok 11        + float4                                     33 ms
ok 12        + float8                                     75 ms
ok 13        + bit                                        75 ms
ok 14        + numeric                                   203 ms
ok 15        + txid                                       60 ms
ok 16        + uuid                                       68 ms
ok 17        + enum                                       79 ms
ok 18        + money                                      62 ms
ok 19        + rangetypes                                219 ms
ok 20        + pg_lsn                                     39 ms
ok 21        + regproc                                    44 ms
# parallel group (20 tests):  md5 lseg point inet path timetz line macaddr8 macaddr circle time numerology interval date strings polygon multirangetypes box timestamp timestamptz
ok 22        + strings                                   108 ms
ok 23        + md5                                        36 ms
ok 24        + numerology                                 67 ms
ok 25        + point                                      38 ms
ok 26        + lseg                                       38 ms
ok 27        + line                                       56 ms
ok 28        + box                                       155 ms
ok 29        + path                                       55 ms
ok 30        + polygon                                   124 ms
ok 31        + circle                                     64 ms
ok 32        + date                                       70 ms
ok 33        + time                                       65 ms
ok 34        + timetz                                     55 ms
ok 35        + timestamp                                 440 ms
ok 36        + timestamptz                               466 ms
ok 37        + interval                                   68 ms
ok 38        + inet                                       40 ms
ok 39        + macaddr                                    61 ms
ok 40        + macaddr8                                   57 ms
ok 41        + multirangetypes                           153 ms
# parallel group (12 tests):  misc_sanity comments unicode tstypes expressions horology xid mvcc type_sanity geometry opr_sanity regex
ok 42        + geometry                                   76 ms
ok 43        + horology                                   57 ms
ok 44        + tstypes                                    49 ms
ok 45        + regex                                     219 ms
ok 46        + type_sanity                                75 ms
ok 47        + opr_sanity                                197 ms
ok 48        + misc_sanity                                30 ms
ok 49        + comments                                   33 ms
ok 50        + expressions                                52 ms
ok 51        + unicode                                    36 ms
ok 52        + xid                                        61 ms
ok 53        + mvcc                                       66 ms
# parallel group (5 tests):  copyselect copydml copy insert_conflict insert
ok 54        + copy                                       32 ms
ok 55        + copyselect                                 23 ms
ok 56        + copydml                                    24 ms
ok 57        + insert                                    124 ms
ok 58        + insert_conflict                            61 ms
# parallel group (7 tests):  create_function_c create_schema create_operator create_type create_misc create_procedure create_table
ok 59        + create_function_c                          19 ms
ok 60        + create_misc                                33 ms
ok 61        + create_operator                            25 ms
ok 62        + create_procedure                           39 ms
ok 63        + create_table                              164 ms
ok 64        + create_type                                30 ms
ok 65        + create_schema                              25 ms
# parallel group (5 tests):  index_including create_view index_including_gist create_index_spgist create_index
ok 66        + create_index                              337 ms
ok 67        + create_index_spgist                       278 ms
ok 68        + create_view                               118 ms
ok 69        + index_including                           106 ms
ok 70        + index_including_gist                      184 ms
# parallel group (16 tests):  create_cast create_aggregate hash_func select errors roleattributes typed_table create_function_sql drop_if_exists create_am constraints infinite_recurse vacuum updatable_views inherit triggers
ok 71        + create_aggregate                           50 ms
ok 72        + create_function_sql                        87 ms
ok 73        + create_cast                                49 ms
ok 74        + constraints                               131 ms
ok 75        + triggers                                  402 ms
ok 76        + select                                     55 ms
ok 77        + inherit                                   301 ms
ok 78        + typed_table                                75 ms
ok 79        + vacuum                                    207 ms
ok 80        + drop_if_exists                             94 ms
ok 81        + updatable_views                           287 ms
ok 82        + roleattributes                             64 ms
ok 83        + create_am                                 106 ms
ok 84        + hash_func                                  51 ms
ok 85        + errors                                     60 ms
ok 86        + infinite_recurse                          198 ms
ok 87        - sanity_check                               46 ms
# parallel group (20 tests):  delete select_distinct_on random select_having namespace case select_implicit portals select_into prepared_xacts transactions union select_distinct subselect arrays update hash_index join aggregates btree_index
ok 88        + select_into                               137 ms
ok 89        + select_distinct                           171 ms
ok 90        + select_distinct_on                         72 ms
ok 91        + select_implicit                           115 ms
ok 92        + select_having                              86 ms
ok 93        + subselect                                 213 ms
ok 94        + union                                     165 ms
ok 95        + case                                       95 ms
ok 96        + join                                      407 ms
ok 97        + aggregates                                440 ms
ok 98        + transactions                              161 ms
ok 99        + random                                     73 ms
ok 100       + portals                                   133 ms
ok 101       + arrays                                    244 ms
ok 102       + btree_index                               906 ms
ok 103       + hash_index                                374 ms
ok 104       + update                                    268 ms
ok 105       + delete                                     61 ms
ok 106       + namespace                                  91 ms
ok 107       + prepared_xacts                            148 ms
# parallel group (20 tests):  security_label drop_operator init_privs lock collate tablesample object_address replica_identity password identity groupingsets matview generated rowsecurity gin spgist gist join_hash brin privileges
ok 108       + brin                                     1137 ms
ok 109       + gin                                       572 ms
ok 110       + gist                                      700 ms
ok 111       + spgist                                    581 ms
ok 112       + privileges                               1382 ms
ok 113       + init_privs                                122 ms
ok 114       + security_label                            107 ms
ok 115       + collate                                   167 ms
ok 116       + matview                                   373 ms
ok 117       + lock                                      167 ms
ok 118       + replica_identity                          251 ms
ok 119       + rowsecurity                               459 ms
ok 120       + object_address                            203 ms
ok 121       + tablesample                               167 ms
ok 122       + groupingsets                              314 ms
ok 123       + drop_operator                             113 ms
ok 124       + password                                  295 ms
ok 125       + identity                                  313 ms
ok 126       + generated                                 393 ms
ok 127       + join_hash                                1134 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 128       + brin_bloom                                143 ms
ok 129       + brin_multi                                193 ms
# parallel group (16 tests):  tsrf alter_operator tid async tidscan dbsize create_role tidrangescan alter_generic sysviews misc_functions misc incremental_sort merge create_table_like collate.icu.utf8
ok 130       + create_table_like                         157 ms
ok 131       + alter_generic                              71 ms
ok 132       + alter_operator                             47 ms
ok 133       + misc                                      108 ms
ok 134       + async                                      49 ms
ok 135       + dbsize                                     57 ms
ok 136       + merge                                     134 ms
ok 137       + misc_functions                             82 ms
ok 138       + sysviews                                   80 ms
ok 139       + tsrf                                       32 ms
ok 140       + tid                                        46 ms
ok 141       + tidscan                                    53 ms
ok 142       + tidrangescan                               66 ms
ok 143       + collate.icu.utf8                          162 ms
ok 144       + incremental_sort                          112 ms
ok 145       + create_role                                63 ms
# parallel group (7 tests):  collate.windows.win1252 collate.linux.utf8 amutils psql_crosstab rules psql stats_ext
ok 146       + rules                                     158 ms
ok 147       + psql                                      164 ms
ok 148       + psql_crosstab                              25 ms
ok 149       + amutils                                    21 ms
ok 150       + stats_ext                                 780 ms
ok 151       + collate.linux.utf8                         17 ms
ok 152       + collate.windows.win1252                    11 ms
ok 153       - select_parallel                           852 ms
ok 154       - write_parallel                            112 ms
ok 155       - vacuum_parallel                            63 ms
# parallel group (2 tests):  subscription publication
ok 156       + publication                               148 ms
ok 157       + subscription                               33 ms
# parallel group (17 tests):  portals_p2 combocid dependency advisory_lock functional_deps equivclass xmlmap tsdicts guc select_views window tsearch bitmapops cluster indirect_toast foreign_data foreign_key
ok 158       + select_views                              135 ms
ok 159       + portals_p2                                 29 ms
ok 160       + foreign_key                               496 ms
ok 161       + cluster                                   253 ms
ok 162       + dependency                                 57 ms
ok 163       + guc                                       107 ms
ok 164       + bitmapops                                 247 ms
ok 165       + combocid                                   49 ms
ok 166       + tsearch                                   226 ms
ok 167       + tsdicts                                    98 ms
ok 168       + foreign_data                              325 ms
ok 169       + window                                    192 ms
ok 170       + xmlmap                                     82 ms
ok 171       + functional_deps                            75 ms
ok 172       + advisory_lock                              70 ms
ok 173       + indirect_toast                            292 ms
ok 174       + equivclass                                 76 ms
# parallel group (7 tests):  jsonpath_encoding json_encoding jsonpath sqljson jsonb_jsonpath json jsonb
ok 175       + json                                       54 ms
ok 176       + jsonb                                     114 ms
ok 177       + json_encoding                              20 ms
ok 178       + jsonpath                                   29 ms
ok 179       + jsonpath_encoding                          19 ms
ok 180       + jsonb_jsonpath                             40 ms
ok 181       + sqljson                                    36 ms
# parallel group (18 tests):  prepare returning limit xml plancache conversion polymorphism rowtypes temp sequence copy2 with domain rangefuncs largeobject truncate plpgsql alter_table
ok 182       + plancache                                 112 ms
ok 183       + limit                                      92 ms
ok 184       + plpgsql                                   337 ms
ok 185       + copy2                                     178 ms
ok 186       + temp                                      170 ms
ok 187       + domain                                    195 ms
ok 188       + rangefuncs                                199 ms
ok 189       + prepare                                    47 ms
ok 190       + conversion                                131 ms
ok 191       + truncate                                  207 ms
ok 192       + alter_table                               634 ms
ok 193       + sequence                                  173 ms
ok 194       + polymorphism                              138 ms
ok 195       + rowtypes                                  164 ms
ok 196       + returning                                  80 ms
ok 197       + largeobject                               202 ms
ok 198       + with                                      190 ms
ok 199       + xml                                       102 ms
# parallel group (12 tests):  reloptions hash_part partition_info explain memoize compression indexing partition_join partition_aggregate partition_prune stats tuplesort
ok 200       + partition_join                            439 ms
ok 201       + partition_prune                           550 ms
ok 202       + reloptions                                 46 ms
ok 203       + hash_part                                  48 ms
ok 204       + indexing                                  403 ms
ok 205       + partition_aggregate                       546 ms
ok 206       + partition_info                             69 ms
ok 207       + tuplesort                                 683 ms
ok 208       + explain                                    93 ms
ok 209       + compression                               136 ms
ok 210       + memoize                                   112 ms
ok 211       + stats                                     637 ms
# parallel group (2 tests):  event_trigger oidjoins
ok 212       + event_trigger                              51 ms
ok 213       + oidjoins                                  102 ms
ok 214       - fast_default                               60 ms
ok 215       - tablespace                                135 ms
1..215
# All 215 tests passed.
make[1]: Leaving directory '/home/david/postgresql/src/test/regress'
