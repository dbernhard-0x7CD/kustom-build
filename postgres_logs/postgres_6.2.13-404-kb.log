make -C ./src/backend generated-headers
make[1]: Entering directory '/home/david/postgresql/src/backend'
make -C catalog distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/catalog'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/catalog'
make -C nodes distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/nodes'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/nodes'
make -C utils distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/utils'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/utils'
make[1]: Leaving directory '/home/david/postgresql/src/backend'
rm -rf '/home/david/postgresql'/tmp_install
/usr/bin/mkdir -p '/home/david/postgresql'/tmp_install/log
make -C '.' DESTDIR='/home/david/postgresql'/tmp_install install >'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -j1 -C src/test/regress checkprep >>'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -C src/test/regress check
make[1]: Entering directory '/home/david/postgresql/src/test/regress'
make -C ../../../src/port all
make[2]: Entering directory '/home/david/postgresql/src/port'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/port'
make -C ../../../src/common all
make[2]: Entering directory '/home/david/postgresql/src/common'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/common'
make -C ../../../contrib/spi
make[2]: Entering directory '/home/david/postgresql/contrib/spi'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/contrib/spi'
echo "# +++ regress check in src/test/regress +++" && PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/bin:/home/david/postgresql/src/test/regress:$PATH" LD_LIBRARY_PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/lib"  ../../../src/test/regress/pg_regress --temp-instance=./tmp_check --inputdir=. --bindir=     --dlpath=. --max-concurrent-tests=20  --schedule=./parallel_schedule  
# +++ regress check in src/test/regress +++
# using temp instance on port 61696 with PID 2177
ok 1         - test_setup                                341 ms
# parallel group (20 tests):  oid int2 money pg_lsn regproc varchar text name int8 txid uuid float4 float8 char boolean enum bit int4 numeric rangetypes
ok 2         + boolean                                    73 ms
ok 3         + char                                       71 ms
ok 4         + name                                       60 ms
ok 5         + varchar                                    52 ms
ok 6         + text                                       53 ms
ok 7         + int2                                       39 ms
ok 8         + int4                                       75 ms
ok 9         + int8                                       63 ms
ok 10        + oid                                        36 ms
ok 11        + float4                                     68 ms
ok 12        + float8                                     68 ms
ok 13        + bit                                        74 ms
ok 14        + numeric                                   189 ms
ok 15        + txid                                       66 ms
ok 16        + uuid                                       66 ms
ok 17        + enum                                       72 ms
ok 18        + money                                      41 ms
ok 19        + rangetypes                                213 ms
ok 20        + pg_lsn                                     45 ms
ok 21        + regproc                                    49 ms
# parallel group (20 tests):  md5 lseg numerology line circle point macaddr timetz macaddr8 time path date interval inet strings box polygon multirangetypes timestamp timestamptz
ok 22        + strings                                    88 ms
ok 23        + md5                                        21 ms
ok 24        + numerology                                 31 ms
ok 25        + point                                      55 ms
ok 26        + lseg                                       22 ms
ok 27        + line                                       44 ms
ok 28        + box                                       134 ms
ok 29        + path                                       64 ms
ok 30        + polygon                                   135 ms
ok 31        + circle                                     52 ms
ok 32        + date                                       63 ms
ok 33        + time                                       61 ms
ok 34        + timetz                                     55 ms
ok 35        + timestamp                                 439 ms
ok 36        + timestamptz                               505 ms
ok 37        + interval                                   75 ms
ok 38        + inet                                       76 ms
ok 39        + macaddr                                    54 ms
ok 40        + macaddr8                                   55 ms
ok 41        + multirangetypes                           142 ms
# parallel group (12 tests):  comments unicode misc_sanity tstypes xid mvcc expressions horology geometry type_sanity opr_sanity regex
ok 42        + geometry                                   82 ms
ok 43        + horology                                   71 ms
ok 44        + tstypes                                    51 ms
ok 45        + regex                                     219 ms
ok 46        + type_sanity                                94 ms
ok 47        + opr_sanity                                185 ms
ok 48        + misc_sanity                                49 ms
ok 49        + comments                                   28 ms
ok 50        + expressions                                66 ms
ok 51        + unicode                                    39 ms
ok 52        + xid                                        51 ms
ok 53        + mvcc                                       65 ms
# parallel group (5 tests):  copydml copyselect copy insert_conflict insert
ok 54        + copy                                       45 ms
ok 55        + copyselect                                 22 ms
ok 56        + copydml                                    20 ms
ok 57        + insert                                    124 ms
ok 58        + insert_conflict                            67 ms
# parallel group (7 tests):  create_function_c create_operator create_schema create_type create_misc create_procedure create_table
ok 59        + create_function_c                          19 ms
ok 60        + create_misc                                34 ms
ok 61        + create_operator                            24 ms
ok 62        + create_procedure                           35 ms
ok 63        + create_table                              156 ms
ok 64        + create_type                                29 ms
ok 65        + create_schema                              24 ms
# parallel group (5 tests):  index_including index_including_gist create_view create_index_spgist create_index
ok 66        + create_index                              639 ms
ok 67        + create_index_spgist                       225 ms
ok 68        + create_view                               122 ms
ok 69        + index_including                            84 ms
ok 70        + index_including_gist                      117 ms
# parallel group (16 tests):  create_cast errors roleattributes select drop_if_exists create_function_sql create_aggregate hash_func typed_table constraints create_am infinite_recurse vacuum updatable_views inherit triggers
ok 71        + create_aggregate                           76 ms
ok 72        + create_function_sql                        74 ms
ok 73        + create_cast                                30 ms
ok 74        + constraints                               108 ms
ok 75        + triggers                                  410 ms
ok 76        + select                                     62 ms
ok 77        + inherit                                   285 ms
ok 78        + typed_table                                96 ms
ok 79        + vacuum                                    214 ms
ok 80        + drop_if_exists                             62 ms
ok 81        + updatable_views                           282 ms
ok 82        + roleattributes                             52 ms
ok 83        + create_am                                 108 ms
ok 84        + hash_func                                  82 ms
ok 85        + errors                                     51 ms
ok 86        + infinite_recurse                          162 ms
ok 87        - sanity_check                               47 ms
# parallel group (20 tests):  namespace select_having select_distinct_on select_implicit random case delete select_into portals prepared_xacts union select_distinct transactions subselect arrays update hash_index join aggregates btree_index
ok 88        + select_into                                78 ms
ok 89        + select_distinct                           168 ms
ok 90        + select_distinct_on                         59 ms
ok 91        + select_implicit                            62 ms
ok 92        + select_having                              48 ms
ok 93        + subselect                                 189 ms
ok 94        + union                                     167 ms
ok 95        + case                                       75 ms
ok 96        + join                                      383 ms
ok 97        + aggregates                                396 ms
ok 98        + transactions                              174 ms
ok 99        + random                                     66 ms
ok 100       + portals                                   116 ms
ok 101       + arrays                                    231 ms
ok 102       + btree_index                               869 ms
ok 103       + hash_index                                370 ms
ok 104       + update                                    276 ms
ok 105       + delete                                     74 ms
ok 106       + namespace                                  29 ms
ok 107       + prepared_xacts                            143 ms
# parallel group (20 tests):  init_privs drop_operator lock tablesample security_label object_address collate replica_identity password groupingsets identity matview generated rowsecurity gin spgist gist join_hash brin privileges
ok 108       + brin                                     1102 ms
ok 109       + gin                                       560 ms
ok 110       + gist                                      620 ms
ok 111       + spgist                                    561 ms
ok 112       + privileges                               1349 ms
ok 113       + init_privs                                113 ms
ok 114       + security_label                            173 ms
ok 115       + collate                                   222 ms
ok 116       + matview                                   374 ms
ok 117       + lock                                      127 ms
ok 118       + replica_identity                          240 ms
ok 119       + rowsecurity                               470 ms
ok 120       + object_address                            207 ms
ok 121       + tablesample                               169 ms
ok 122       + groupingsets                              327 ms
ok 123       + drop_operator                             122 ms
ok 124       + password                                  273 ms
ok 125       + identity                                  337 ms
ok 126       + generated                                 439 ms
ok 127       + join_hash                                1098 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 128       + brin_bloom                                135 ms
ok 129       + brin_multi                                185 ms
# parallel group (16 tests):  dbsize tidscan alter_operator tidrangescan async misc_functions tsrf tid sysviews alter_generic create_role misc incremental_sort merge create_table_like collate.icu.utf8
ok 130       + create_table_like                         159 ms
ok 131       + alter_generic                              79 ms
ok 132       + alter_operator                             47 ms
ok 133       + misc                                      106 ms
ok 134       + async                                      51 ms
ok 135       + dbsize                                     29 ms
ok 136       + merge                                     147 ms
ok 137       + misc_functions                             59 ms
ok 138       + sysviews                                   64 ms
ok 139       + tsrf                                       59 ms
ok 140       + tid                                        62 ms
ok 141       + tidscan                                    43 ms
ok 142       + tidrangescan                               48 ms
ok 143       + collate.icu.utf8                          163 ms
ok 144       + incremental_sort                          122 ms
ok 145       + create_role                                81 ms
# parallel group (7 tests):  amutils collate.windows.win1252 collate.linux.utf8 psql_crosstab rules psql stats_ext
ok 146       + rules                                     141 ms
ok 147       + psql                                      182 ms
ok 148       + psql_crosstab                              25 ms
ok 149       + amutils                                    14 ms
ok 150       + stats_ext                                 786 ms
ok 151       + collate.linux.utf8                         18 ms
ok 152       + collate.windows.win1252                    18 ms
ok 153       - select_parallel                           844 ms
ok 154       - write_parallel                            101 ms
ok 155       - vacuum_parallel                            65 ms
# parallel group (2 tests):  subscription publication
ok 156       + publication                               140 ms
ok 157       + subscription                               34 ms
# parallel group (17 tests):  functional_deps combocid xmlmap guc advisory_lock portals_p2 equivclass dependency tsdicts select_views window cluster bitmapops tsearch indirect_toast foreign_data foreign_key
ok 158       + select_views                              140 ms
ok 159       + portals_p2                                 90 ms
ok 160       + foreign_key                               509 ms
ok 161       + cluster                                   244 ms
ok 162       + dependency                                104 ms
ok 163       + guc                                        74 ms
ok 164       + bitmapops                                 248 ms
ok 165       + combocid                                   50 ms
ok 166       + tsearch                                   252 ms
ok 167       + tsdicts                                   115 ms
ok 168       + foreign_data                              331 ms
ok 169       + window                                    182 ms
ok 170       + xmlmap                                     57 ms
ok 171       + functional_deps                            46 ms
ok 172       + advisory_lock                              85 ms
ok 173       + indirect_toast                            302 ms
ok 174       + equivclass                                 99 ms
# parallel group (7 tests):  jsonpath_encoding json_encoding jsonpath sqljson jsonb_jsonpath json jsonb
ok 175       + json                                       57 ms
ok 176       + jsonb                                     116 ms
ok 177       + json_encoding                              20 ms
ok 178       + jsonpath                                   21 ms
ok 179       + jsonpath_encoding                          19 ms
ok 180       + jsonb_jsonpath                             45 ms
ok 181       + sqljson                                    34 ms
# parallel group (18 tests):  prepare xml returning limit plancache polymorphism conversion rowtypes sequence copy2 with temp truncate largeobject rangefuncs domain plpgsql alter_table
ok 182       + plancache                                 102 ms
ok 183       + limit                                      84 ms
ok 184       + plpgsql                                   332 ms
ok 185       + copy2                                     177 ms
ok 186       + temp                                      188 ms
ok 187       + domain                                    218 ms
ok 188       + rangefuncs                                216 ms
ok 189       + prepare                                    70 ms
ok 190       + conversion                                147 ms
ok 191       + truncate                                  212 ms
ok 192       + alter_table                               627 ms
ok 193       + sequence                                  164 ms
ok 194       + polymorphism                              138 ms
ok 195       + rowtypes                                  164 ms
ok 196       + returning                                  76 ms
ok 197       + largeobject                               214 ms
ok 198       + with                                      181 ms
ok 199       + xml                                        72 ms
# parallel group (12 tests):  reloptions hash_part partition_info explain memoize compression indexing partition_join partition_aggregate stats partition_prune tuplesort
ok 200       + partition_join                            409 ms
ok 201       + partition_prune                           574 ms
ok 202       + reloptions                                 37 ms
ok 203       + hash_part                                  38 ms
ok 204       + indexing                                  370 ms
ok 205       + partition_aggregate                       564 ms
ok 206       + partition_info                             45 ms
ok 207       + tuplesort                                 691 ms
ok 208       + explain                                    78 ms
ok 209       + compression                               140 ms
ok 210       + memoize                                    94 ms
ok 211       + stats                                     565 ms
# parallel group (2 tests):  event_trigger oidjoins
ok 212       + event_trigger                              52 ms
ok 213       + oidjoins                                  102 ms
ok 214       - fast_default                               62 ms
ok 215       - tablespace                                132 ms
1..215
# All 215 tests passed.
make[1]: Leaving directory '/home/david/postgresql/src/test/regress'
