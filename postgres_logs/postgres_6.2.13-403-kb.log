make -C ./src/backend generated-headers
make[1]: Entering directory '/home/david/postgresql/src/backend'
make -C catalog distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/catalog'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/catalog'
make -C nodes distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/nodes'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/nodes'
make -C utils distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/utils'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/utils'
make[1]: Leaving directory '/home/david/postgresql/src/backend'
rm -rf '/home/david/postgresql'/tmp_install
/usr/bin/mkdir -p '/home/david/postgresql'/tmp_install/log
make -C '.' DESTDIR='/home/david/postgresql'/tmp_install install >'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -j1 -C src/test/regress checkprep >>'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -C src/test/regress check
make[1]: Entering directory '/home/david/postgresql/src/test/regress'
make -C ../../../src/port all
make[2]: Entering directory '/home/david/postgresql/src/port'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/port'
make -C ../../../src/common all
make[2]: Entering directory '/home/david/postgresql/src/common'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/common'
make -C ../../../contrib/spi
make[2]: Entering directory '/home/david/postgresql/contrib/spi'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/contrib/spi'
echo "# +++ regress check in src/test/regress +++" && PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/bin:/home/david/postgresql/src/test/regress:$PATH" LD_LIBRARY_PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/lib"  ../../../src/test/regress/pg_regress --temp-instance=./tmp_check --inputdir=. --bindir=     --dlpath=. --max-concurrent-tests=20  --schedule=./parallel_schedule  
# +++ regress check in src/test/regress +++
# using temp instance on port 61696 with PID 2146
ok 1         - test_setup                                138 ms
# parallel group (20 tests):  int4 int8 text varchar txid pg_lsn char name int2 money boolean oid float4 uuid regproc float8 enum bit numeric rangetypes
ok 2         + boolean                                    80 ms
ok 3         + char                                       71 ms
ok 4         + name                                       73 ms
ok 5         + varchar                                    63 ms
ok 6         + text                                       57 ms
ok 7         + int2                                       76 ms
ok 8         + int4                                       38 ms
ok 9         + int8                                       52 ms
ok 10        + oid                                        79 ms
ok 11        + float4                                     80 ms
ok 12        + float8                                     91 ms
ok 13        + bit                                        93 ms
ok 14        + numeric                                   214 ms
ok 15        + txid                                       65 ms
ok 16        + uuid                                       82 ms
ok 17        + enum                                       91 ms
ok 18        + money                                      77 ms
ok 19        + rangetypes                                225 ms
ok 20        + pg_lsn                                     69 ms
ok 21        + regproc                                    86 ms
# parallel group (20 tests):  lseg line timetz macaddr md5 numerology path point date circle time macaddr8 inet interval strings polygon box multirangetypes timestamp timestamptz
ok 22        + strings                                   116 ms
ok 23        + md5                                        51 ms
ok 24        + numerology                                 53 ms
ok 25        + point                                      62 ms
ok 26        + lseg                                       37 ms
ok 27        + line                                       40 ms
ok 28        + box                                       152 ms
ok 29        + path                                       58 ms
ok 30        + polygon                                   148 ms
ok 31        + circle                                     62 ms
ok 32        + date                                       62 ms
ok 33        + time                                       66 ms
ok 34        + timetz                                     43 ms
ok 35        + timestamp                                 443 ms
ok 36        + timestamptz                               529 ms
ok 37        + interval                                   79 ms
ok 38        + inet                                       68 ms
ok 39        + macaddr                                    46 ms
ok 40        + macaddr8                                   67 ms
ok 41        + multirangetypes                           172 ms
# parallel group (12 tests):  tstypes misc_sanity unicode comments xid mvcc horology expressions geometry type_sanity opr_sanity regex
ok 42        + geometry                                   86 ms
ok 43        + horology                                   73 ms
ok 44        + tstypes                                    54 ms
ok 45        + regex                                     229 ms
ok 46        + type_sanity                               111 ms
ok 47        + opr_sanity                                213 ms
ok 48        + misc_sanity                                55 ms
ok 49        + comments                                   59 ms
ok 50        + expressions                                73 ms
ok 51        + unicode                                    54 ms
ok 52        + xid                                        64 ms
ok 53        + mvcc                                       68 ms
# parallel group (5 tests):  copydml copyselect copy insert_conflict insert
ok 54        + copy                                       40 ms
ok 55        + copyselect                                 24 ms
ok 56        + copydml                                    19 ms
ok 57        + insert                                    128 ms
ok 58        + insert_conflict                            60 ms
# parallel group (7 tests):  create_function_c create_operator create_procedure create_type create_schema create_misc create_table
ok 59        + create_function_c                          19 ms
ok 60        + create_misc                                34 ms
ok 61        + create_operator                            25 ms
ok 62        + create_procedure                           31 ms
ok 63        + create_table                              162 ms
ok 64        + create_type                                31 ms
ok 65        + create_schema                              33 ms
# parallel group (5 tests):  index_including index_including_gist create_view create_index_spgist create_index
ok 66        + create_index                              355 ms
ok 67        + create_index_spgist                       229 ms
ok 68        + create_view                               170 ms
ok 69        + index_including                            67 ms
ok 70        + index_including_gist                      127 ms
# parallel group (16 tests):  errors hash_func create_aggregate roleattributes create_cast typed_table drop_if_exists select create_am create_function_sql constraints infinite_recurse vacuum updatable_views inherit triggers
ok 71        + create_aggregate                           45 ms
ok 72        + create_function_sql                       103 ms
ok 73        + create_cast                                57 ms
ok 74        + constraints                               137 ms
ok 75        + triggers                                  401 ms
ok 76        + select                                     75 ms
ok 77        + inherit                                   306 ms
ok 78        + typed_table                                72 ms
ok 79        + vacuum                                    221 ms
ok 80        + drop_if_exists                             73 ms
ok 81        + updatable_views                           286 ms
ok 82        + roleattributes                             50 ms
ok 83        + create_am                                  81 ms
ok 84        + hash_func                                  31 ms
ok 85        + errors                                     26 ms
ok 86        + infinite_recurse                          195 ms
ok 87        - sanity_check                               47 ms
# parallel group (20 tests):  select_having namespace random select_distinct_on delete case select_implicit transactions prepared_xacts select_into union portals select_distinct arrays subselect update hash_index join aggregates btree_index
ok 88        + select_into                               128 ms
ok 89        + select_distinct                           171 ms
ok 90        + select_distinct_on                         69 ms
ok 91        + select_implicit                            92 ms
ok 92        + select_having                              44 ms
ok 93        + subselect                                 228 ms
ok 94        + union                                     149 ms
ok 95        + case                                       88 ms
ok 96        + join                                      405 ms
ok 97        + aggregates                                459 ms
ok 98        + transactions                              119 ms
ok 99        + random                                     62 ms
ok 100       + portals                                   157 ms
ok 101       + arrays                                    198 ms
ok 102       + btree_index                               820 ms
ok 103       + hash_index                                371 ms
ok 104       + update                                    302 ms
ok 105       + delete                                     81 ms
ok 106       + namespace                                  59 ms
ok 107       + prepared_xacts                            124 ms
# parallel group (20 tests):  init_privs security_label drop_operator tablesample object_address lock password collate replica_identity groupingsets identity matview generated rowsecurity spgist gin gist join_hash brin privileges
ok 108       + brin                                     1087 ms
ok 109       + gin                                       550 ms
ok 110       + gist                                      626 ms
ok 111       + spgist                                    541 ms
ok 112       + privileges                               1336 ms
ok 113       + init_privs                                 37 ms
ok 114       + security_label                             63 ms
ok 115       + collate                                   206 ms
ok 116       + matview                                   387 ms
ok 117       + lock                                      124 ms
ok 118       + replica_identity                          234 ms
ok 119       + rowsecurity                               444 ms
ok 120       + object_address                            112 ms
ok 121       + tablesample                               110 ms
ok 122       + groupingsets                              284 ms
ok 123       + drop_operator                              81 ms
ok 124       + password                                  182 ms
ok 125       + identity                                  318 ms
ok 126       + generated                                 397 ms
ok 127       + join_hash                                1084 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 128       + brin_bloom                                140 ms
ok 129       + brin_multi                                190 ms
# parallel group (16 tests):  tsrf tid create_role alter_operator sysviews tidrangescan dbsize async alter_generic tidscan misc_functions misc incremental_sort merge collate.icu.utf8 create_table_like
ok 130       + create_table_like                         170 ms
ok 131       + alter_generic                              72 ms
ok 132       + alter_operator                             47 ms
ok 133       + misc                                      110 ms
ok 134       + async                                      58 ms
ok 135       + dbsize                                     56 ms
ok 136       + merge                                     138 ms
ok 137       + misc_functions                             74 ms
ok 138       + sysviews                                   53 ms
ok 139       + tsrf                                       33 ms
ok 140       + tid                                        36 ms
ok 141       + tidscan                                    73 ms
ok 142       + tidrangescan                               55 ms
ok 143       + collate.icu.utf8                          165 ms
ok 144       + incremental_sort                          124 ms
ok 145       + create_role                                45 ms
# parallel group (7 tests):  collate.linux.utf8 collate.windows.win1252 psql_crosstab amutils rules psql stats_ext
ok 146       + rules                                     159 ms
ok 147       + psql                                      175 ms
ok 148       + psql_crosstab                              21 ms
ok 149       + amutils                                    22 ms
ok 150       + stats_ext                                 792 ms
ok 151       + collate.linux.utf8                         19 ms
ok 152       + collate.windows.win1252                    19 ms
ok 153       - select_parallel                           864 ms
ok 154       - write_parallel                            118 ms
ok 155       - vacuum_parallel                            62 ms
# parallel group (2 tests):  subscription publication
ok 156       + publication                               148 ms
ok 157       + subscription                               33 ms
# parallel group (17 tests):  portals_p2 advisory_lock guc xmlmap equivclass functional_deps combocid dependency tsdicts select_views window tsearch cluster bitmapops indirect_toast foreign_data foreign_key
ok 158       + select_views                              153 ms
ok 159       + portals_p2                                 30 ms
ok 160       + foreign_key                               497 ms
ok 161       + cluster                                   231 ms
ok 162       + dependency                                 90 ms
ok 163       + guc                                        58 ms
ok 164       + bitmapops                                 262 ms
ok 165       + combocid                                   85 ms
ok 166       + tsearch                                   214 ms
ok 167       + tsdicts                                    97 ms
ok 168       + foreign_data                              320 ms
ok 169       + window                                    202 ms
ok 170       + xmlmap                                     67 ms
ok 171       + functional_deps                            76 ms
ok 172       + advisory_lock                              53 ms
ok 173       + indirect_toast                            287 ms
ok 174       + equivclass                                 75 ms
# parallel group (7 tests):  jsonpath_encoding json_encoding jsonpath sqljson jsonb_jsonpath json jsonb
ok 175       + json                                       79 ms
ok 176       + jsonb                                     152 ms
ok 177       + json_encoding                              20 ms
ok 178       + jsonpath                                   21 ms
ok 179       + jsonpath_encoding                          19 ms
ok 180       + jsonb_jsonpath                             46 ms
ok 181       + sqljson                                    34 ms
# parallel group (18 tests):  returning prepare limit conversion plancache xml polymorphism rowtypes temp with copy2 sequence rangefuncs truncate domain largeobject plpgsql alter_table
ok 182       + plancache                                 107 ms
ok 183       + limit                                      73 ms
ok 184       + plpgsql                                   342 ms
ok 185       + copy2                                     174 ms
ok 186       + temp                                      169 ms
ok 187       + domain                                    205 ms
ok 188       + rangefuncs                                191 ms
ok 189       + prepare                                    54 ms
ok 190       + conversion                                 99 ms
ok 191       + truncate                                  204 ms
ok 192       + alter_table                               743 ms
ok 193       + sequence                                  184 ms
ok 194       + polymorphism                              153 ms
ok 195       + rowtypes                                  155 ms
ok 196       + returning                                  39 ms
ok 197       + largeobject                               216 ms
ok 198       + with                                      173 ms
ok 199       + xml                                       110 ms
# parallel group (12 tests):  hash_part reloptions partition_info explain compression memoize indexing partition_join stats partition_aggregate partition_prune tuplesort
ok 200       + partition_join                            557 ms
ok 201       + partition_prune                           675 ms
ok 202       + reloptions                                 44 ms
ok 203       + hash_part                                  35 ms
ok 204       + indexing                                  497 ms
ok 205       + partition_aggregate                       668 ms
ok 206       + partition_info                             81 ms
ok 207       + tuplesort                                 789 ms
ok 208       + explain                                    81 ms
ok 209       + compression                               106 ms
ok 210       + memoize                                   117 ms
ok 211       + stats                                     641 ms
# parallel group (2 tests):  event_trigger oidjoins
ok 212       + event_trigger                              52 ms
ok 213       + oidjoins                                  100 ms
ok 214       - fast_default                               61 ms
ok 215       - tablespace                                140 ms
1..215
# All 215 tests passed.
make[1]: Leaving directory '/home/david/postgresql/src/test/regress'
