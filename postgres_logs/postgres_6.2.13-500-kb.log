make -C ./src/backend generated-headers
make[1]: Entering directory '/home/david/postgresql/src/backend'
make -C catalog distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/catalog'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/catalog'
make -C nodes distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/nodes'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/nodes'
make -C utils distprep generated-header-symlinks
make[2]: Entering directory '/home/david/postgresql/src/backend/utils'
make[2]: Nothing to be done for 'distprep'.
make[2]: Nothing to be done for 'generated-header-symlinks'.
make[2]: Leaving directory '/home/david/postgresql/src/backend/utils'
make[1]: Leaving directory '/home/david/postgresql/src/backend'
rm -rf '/home/david/postgresql'/tmp_install
/usr/bin/mkdir -p '/home/david/postgresql'/tmp_install/log
make -C '.' DESTDIR='/home/david/postgresql'/tmp_install install >'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -j1 -C src/test/regress checkprep >>'/home/david/postgresql'/tmp_install/log/install.log 2>&1
make -C src/test/regress check
make[1]: Entering directory '/home/david/postgresql/src/test/regress'
make -C ../../../src/port all
make[2]: Entering directory '/home/david/postgresql/src/port'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/port'
make -C ../../../src/common all
make[2]: Entering directory '/home/david/postgresql/src/common'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/src/common'
make -C ../../../contrib/spi
make[2]: Entering directory '/home/david/postgresql/contrib/spi'
make[2]: Nothing to be done for 'all'.
make[2]: Leaving directory '/home/david/postgresql/contrib/spi'
echo "# +++ regress check in src/test/regress +++" && PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/bin:/home/david/postgresql/src/test/regress:$PATH" LD_LIBRARY_PATH="/home/david/postgresql/tmp_install/usr/local/pgsql/lib"  ../../../src/test/regress/pg_regress --temp-instance=./tmp_check --inputdir=. --bindir=     --dlpath=. --max-concurrent-tests=20  --schedule=./parallel_schedule  
# +++ regress check in src/test/regress +++
# using temp instance on port 61696 with PID 2135
ok 1         - test_setup                                135 ms
# parallel group (20 tests):  int2 int8 name pg_lsn oid float4 varchar text int4 boolean bit txid char uuid regproc enum money float8 numeric rangetypes
ok 2         + boolean                                    64 ms
ok 3         + char                                       65 ms
ok 4         + name                                       49 ms
ok 5         + varchar                                    58 ms
ok 6         + text                                       62 ms
ok 7         + int2                                       26 ms
ok 8         + int4                                       62 ms
ok 9         + int8                                       36 ms
ok 10        + oid                                        49 ms
ok 11        + float4                                     57 ms
ok 12        + float8                                     76 ms
ok 13        + bit                                        63 ms
ok 14        + numeric                                   198 ms
ok 15        + txid                                       63 ms
ok 16        + uuid                                       68 ms
ok 17        + enum                                       73 ms
ok 18        + money                                      74 ms
ok 19        + rangetypes                                217 ms
ok 20        + pg_lsn                                     48 ms
ok 21        + regproc                                    70 ms
# parallel group (20 tests):  lseg md5 line path time timetz macaddr8 numerology circle macaddr inet point interval date strings multirangetypes polygon box timestamp timestamptz
ok 22        + strings                                   102 ms
ok 23        + md5                                        36 ms
ok 24        + numerology                                 53 ms
ok 25        + point                                      61 ms
ok 26        + lseg                                       22 ms
ok 27        + line                                       39 ms
ok 28        + box                                       149 ms
ok 29        + path                                       42 ms
ok 30        + polygon                                   142 ms
ok 31        + circle                                     54 ms
ok 32        + date                                       74 ms
ok 33        + time                                       42 ms
ok 34        + timetz                                     44 ms
ok 35        + timestamp                                 399 ms
ok 36        + timestamptz                               468 ms
ok 37        + interval                                   72 ms
ok 38        + inet                                       59 ms
ok 39        + macaddr                                    53 ms
ok 40        + macaddr8                                   50 ms
ok 41        + multirangetypes                           137 ms
# parallel group (12 tests):  misc_sanity tstypes unicode xid comments expressions horology type_sanity mvcc geometry opr_sanity regex
ok 42        + geometry                                   80 ms
ok 43        + horology                                   75 ms
ok 44        + tstypes                                    46 ms
ok 45        + regex                                     229 ms
ok 46        + type_sanity                                76 ms
ok 47        + opr_sanity                                205 ms
ok 48        + misc_sanity                                34 ms
ok 49        + comments                                   55 ms
ok 50        + expressions                                55 ms
ok 51        + unicode                                    49 ms
ok 52        + xid                                        53 ms
ok 53        + mvcc                                       76 ms
# parallel group (5 tests):  copyselect copydml copy insert_conflict insert
ok 54        + copy                                       46 ms
ok 55        + copyselect                                 16 ms
ok 56        + copydml                                    18 ms
ok 57        + insert                                    133 ms
ok 58        + insert_conflict                            63 ms
# parallel group (7 tests):  create_function_c create_operator create_procedure create_type create_schema create_misc create_table
ok 59        + create_function_c                          19 ms
ok 60        + create_misc                                33 ms
ok 61        + create_operator                            24 ms
ok 62        + create_procedure                           30 ms
ok 63        + create_table                              160 ms
ok 64        + create_type                                30 ms
ok 65        + create_schema                              31 ms
# parallel group (5 tests):  index_including create_view index_including_gist create_index_spgist create_index
ok 66        + create_index                              334 ms
ok 67        + create_index_spgist                       234 ms
ok 68        + create_view                               114 ms
ok 69        + index_including                           103 ms
ok 70        + index_including_gist                      159 ms
# parallel group (16 tests):  create_cast roleattributes create_aggregate drop_if_exists errors hash_func select create_function_sql typed_table create_am constraints infinite_recurse vacuum updatable_views inherit triggers
ok 71        + create_aggregate                           51 ms
ok 72        + create_function_sql                        80 ms
ok 73        + create_cast                                26 ms
ok 74        + constraints                               120 ms
ok 75        + triggers                                  425 ms
ok 76        + select                                     77 ms
ok 77        + inherit                                   301 ms
ok 78        + typed_table                                95 ms
ok 79        + vacuum                                    213 ms
ok 80        + drop_if_exists                             50 ms
ok 81        + updatable_views                           288 ms
ok 82        + roleattributes                             46 ms
ok 83        + create_am                                  96 ms
ok 84        + hash_func                                  67 ms
ok 85        + errors                                     51 ms
ok 86        + infinite_recurse                          191 ms
ok 87        - sanity_check                               46 ms
# parallel group (20 tests):  select_into select_distinct_on random select_having delete case namespace select_implicit prepared_xacts portals select_distinct transactions union subselect arrays update hash_index join aggregates btree_index
ok 88        + select_into                                49 ms
ok 89        + select_distinct                           165 ms
ok 90        + select_distinct_on                         59 ms
ok 91        + select_implicit                           105 ms
ok 92        + select_having                              66 ms
ok 93        + subselect                                 192 ms
ok 94        + union                                     187 ms
ok 95        + case                                       78 ms
ok 96        + join                                      383 ms
ok 97        + aggregates                                422 ms
ok 98        + transactions                              170 ms
ok 99        + random                                     60 ms
ok 100       + portals                                   156 ms
ok 101       + arrays                                    209 ms
ok 102       + btree_index                               777 ms
ok 103       + hash_index                                346 ms
ok 104       + update                                    269 ms
ok 105       + delete                                     70 ms
ok 106       + namespace                                  79 ms
ok 107       + prepared_xacts                            117 ms
# parallel group (20 tests):  drop_operator security_label init_privs tablesample lock object_address password collate replica_identity identity groupingsets matview generated rowsecurity gin spgist gist join_hash brin privileges
ok 108       + brin                                     1085 ms
ok 109       + gin                                       522 ms
ok 110       + gist                                      685 ms
ok 111       + spgist                                    583 ms
ok 112       + privileges                               1326 ms
ok 113       + init_privs                                121 ms
ok 114       + security_label                            107 ms
ok 115       + collate                                   272 ms
ok 116       + matview                                   382 ms
ok 117       + lock                                      159 ms
ok 118       + replica_identity                          283 ms
ok 119       + rowsecurity                               464 ms
ok 120       + object_address                            225 ms
ok 121       + tablesample                               151 ms
ok 122       + groupingsets                              320 ms
ok 123       + drop_operator                             105 ms
ok 124       + password                                  269 ms
ok 125       + identity                                  310 ms
ok 126       + generated                                 408 ms
ok 127       + join_hash                                1082 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 128       + brin_bloom                                140 ms
ok 129       + brin_multi                                190 ms
# parallel group (16 tests):  dbsize tsrf async tidrangescan tidscan alter_operator tid misc_functions alter_generic create_role sysviews misc incremental_sort merge create_table_like collate.icu.utf8
ok 130       + create_table_like                         153 ms
ok 131       + alter_generic                              75 ms
ok 132       + alter_operator                             65 ms
ok 133       + misc                                      100 ms
ok 134       + async                                      47 ms
ok 135       + dbsize                                     29 ms
ok 136       + merge                                     137 ms
ok 137       + misc_functions                             71 ms
ok 138       + sysviews                                   88 ms
ok 139       + tsrf                                       45 ms
ok 140       + tid                                        71 ms
ok 141       + tidscan                                    62 ms
ok 142       + tidrangescan                               60 ms
ok 143       + collate.icu.utf8                          165 ms
ok 144       + incremental_sort                          112 ms
ok 145       + create_role                                80 ms
# parallel group (7 tests):  amutils collate.linux.utf8 collate.windows.win1252 psql_crosstab rules psql stats_ext
ok 146       + rules                                     144 ms
ok 147       + psql                                      159 ms
ok 148       + psql_crosstab                              27 ms
ok 149       + amutils                                    14 ms
ok 150       + stats_ext                                 763 ms
ok 151       + collate.linux.utf8                         17 ms
ok 152       + collate.windows.win1252                    17 ms
ok 153       - select_parallel                           888 ms
ok 154       - write_parallel                            113 ms
ok 155       - vacuum_parallel                            62 ms
# parallel group (2 tests):  subscription publication
ok 156       + publication                               141 ms
ok 157       + subscription                               33 ms
# parallel group (17 tests):  combocid xmlmap advisory_lock portals_p2 dependency functional_deps tsdicts guc equivclass select_views window tsearch cluster bitmapops indirect_toast foreign_data foreign_key
ok 158       + select_views                              141 ms
ok 159       + portals_p2                                 67 ms
ok 160       + foreign_key                               485 ms
ok 161       + cluster                                   251 ms
ok 162       + dependency                                 77 ms
ok 163       + guc                                        78 ms
ok 164       + bitmapops                                 252 ms
ok 165       + combocid                                   32 ms
ok 166       + tsearch                                   217 ms
ok 167       + tsdicts                                    77 ms
ok 168       + foreign_data                              321 ms
ok 169       + window                                    188 ms
ok 170       + xmlmap                                     42 ms
ok 171       + functional_deps                            77 ms
ok 172       + advisory_lock                              59 ms
ok 173       + indirect_toast                            295 ms
ok 174       + equivclass                                 78 ms
# parallel group (7 tests):  jsonpath_encoding json_encoding jsonpath sqljson jsonb_jsonpath json jsonb
ok 175       + json                                       53 ms
ok 176       + jsonb                                     113 ms
ok 177       + json_encoding                              20 ms
ok 178       + jsonpath                                   21 ms
ok 179       + jsonpath_encoding                          19 ms
ok 180       + jsonb_jsonpath                             42 ms
ok 181       + sqljson                                    35 ms
# parallel group (18 tests):  prepare limit returning xml plancache conversion polymorphism rowtypes copy2 temp sequence with rangefuncs domain truncate largeobject plpgsql alter_table
ok 182       + plancache                                 114 ms
ok 183       + limit                                      70 ms
ok 184       + plpgsql                                   334 ms
ok 185       + copy2                                     175 ms
ok 186       + temp                                      176 ms
ok 187       + domain                                    198 ms
ok 188       + rangefuncs                                192 ms
ok 189       + prepare                                    52 ms
ok 190       + conversion                                145 ms
ok 191       + truncate                                  214 ms
ok 192       + alter_table                               620 ms
ok 193       + sequence                                  177 ms
ok 194       + polymorphism                              149 ms
ok 195       + rowtypes                                  159 ms
ok 196       + returning                                  92 ms
ok 197       + largeobject                               221 ms
ok 198       + with                                      191 ms
ok 199       + xml                                       111 ms
# parallel group (12 tests):  hash_part reloptions partition_info explain memoize compression partition_join indexing partition_aggregate partition_prune stats tuplesort
ok 200       + partition_join                            396 ms
ok 201       + partition_prune                           571 ms
ok 202       + reloptions                                 45 ms
ok 203       + hash_part                                  39 ms
ok 204       + indexing                                  397 ms
ok 205       + partition_aggregate                       558 ms
ok 206       + partition_info                             65 ms
ok 207       + tuplesort                                 690 ms
ok 208       + explain                                    91 ms
ok 209       + compression                               143 ms
ok 210       + memoize                                   118 ms
ok 211       + stats                                     644 ms
# parallel group (2 tests):  event_trigger oidjoins
ok 212       + event_trigger                              51 ms
ok 213       + oidjoins                                  103 ms
ok 214       - fast_default                               60 ms
ok 215       - tablespace                                130 ms
1..215
# All 215 tests passed.
make[1]: Leaving directory '/home/david/postgresql/src/test/regress'
